apiVersion: v1
kind: ServiceAccount
metadata:
  name: mariadb-cluster
  namespace: NAME_SPACE
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-10.3.32
    app.kubernetes.io/instance: mariadb-cluster
    app.kubernetes.io/managed-by: Helm
  annotations:
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mariadb-cluster
  namespace: NAME_SPACE
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-10.3.32
    app.kubernetes.io/instance: mariadb-cluster
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: database
data:
  my.cnf: |-
    [mysqld]
    skip-name-resolve
    explicit_defaults_for_timestamp
    basedir=/opt/bitnami/mariadb
    plugin_dir=/opt/bitnami/mariadb/plugin
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    tmpdir=/opt/bitnami/mariadb/tmp
    max_allowed_packet=16M
    bind-address=0.0.0.0
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
    log-error=/opt/bitnami/mariadb/logs/mysqld.log
    character-set-server=UTF8
    collation-server=utf8_general_ci
    autocommit=1

    [client]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    default-character-set=UTF8
    plugin_dir=/opt/bitnami/mariadb/plugin

    [manager]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
---
apiVersion: v1
kind: Service
metadata:
  name: mariadb-cluster-svc
  namespace: NAME_SPACE
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-10.3.32
    app.kubernetes.io/instance: mariadb-cluster
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: database
  annotations:
spec:
  type: NodePort
  ports:
    - name: mysql
      port: 3306
      protocol: TCP
      targetPort: mysql
      nodePort: NODE_PORT
  selector:
    app.kubernetes.io/name: mariadb
    app.kubernetes.io/instance: mariadb-cluster
    app.kubernetes.io/component: database
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mariadb-cluster-statefulset
  namespace: NAME_SPACE
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-10.3.32
    app.kubernetes.io/instance: mariadb-cluster
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: database
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mariadb
      app.kubernetes.io/instance: mariadb-cluster
      app.kubernetes.io/component: database
  serviceName: mariadb-cluster-svc
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      #annotations:
      #  checksum/configuration: 375c9348982c6c547f47c80b270af75457bbf3e64fcbe2b89f69097b3d8233a2
      labels:
        app.kubernetes.io/name: mariadb
        helm.sh/chart: mariadb-10.3.32
        app.kubernetes.io/instance: mariadb-cluster
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: database
    spec:
      serviceAccountName: mariadb-cluster
      affinity:
        podAffinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: mariadb
                    app.kubernetes.io/instance: mariadb-cluster
                    app.kubernetes.io/component: database
                namespaces:
                  - "NAME_SPACE"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 50
            preference:
              matchExpressions:
                - key: dev-pjt-master
                  operator: In
                  values:
                    - "true"
      securityContext:
        fsGroup: 1000
      initContainers:
        - name: volume-permissions
          image: docker.io/bitnami/minideb:buster
          imagePullPolicy: "Always"
          command:
            - /bin/bash
            - -ec
            - |
              chown -R 1000:1000 /bitnami/mariadb
          securityContext:
            runAsUser: 0
          volumeMounts:
            - name: data
              mountPath: /bitnami/msd_sdkariadb
      containers:
        - name: mariadb
          image: bitnami/mariadb:10.3.32-debian-10-r85
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsUser: 1000
          env:
            - name: BITNAMI_DEBUG
              value: "true"
            - name: MARIADB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mariadb-cluster
                  key: mariadb-root-password
            - name: MARIADB_USER
              value: "MARIA_DB_USER_NAME"
            - name: MARIADB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mariadb-cluster
                  key: mariadb-password
            - name: MARIADB_DATABASE
              value: "NAME_SPACE"
            - name: MARIADB_REPLICATION_MODE
              value: "master"
            - name: MARIADB_REPLICATION_USER
              value: "replicator"
            - name: MARIADB_REPLICATION_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mariadb-cluster
                  key: mariadb-replication-password
          ports:
            - name: mysql
              containerPort: 3306
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MARIADB_ROOT_PASSWORD:-}"
                  if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                      pssword_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MARIADB_ROOT_PASSWORD:-}"
                  if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: data
              mountPath: /bitnami/mariadb
            - name: config
              mountPath: /opt/bitnami/mariadb/conf/my.cnf
              subPath: my.cnf
      volumes:
        - name: config
          configMap:
            name: mariadb-cluster
        - name: data
          persistentVolumeClaim:
            claimName: mariadb-volume
